const orderStatus = require('../../../utils/order-status.js');

Page({
  data: {
    orderId: '',
    order: null,
    activity: null,
    photographer: null,
    student: null,
    historyPhotos: [], // ÂéÜÂè≤‰∏ä‰º†ÁöÑÁÖßÁâáÔºàË¢´ÊãíÁªùÁöÑÔºâ
    loading: true
  },

  onLoad(options) {
    if (options.id) {
      this.setData({ orderId: options.id });
      this.loadOrderDetail(options.id);
    }
  },

  async loadOrderDetail(orderId) {
    try {
      const db = wx.cloud.database();

      // Ëé∑ÂèñËÆ¢Âçï‰ø°ÊÅØ
      const { data: order } = await db.collection('activity_orders')
        .doc(orderId)
        .get();

      if (!order) {
        wx.showToast({ title: 'ËÆ¢Âçï‰∏çÂ≠òÂú®', icon: 'none' });
        setTimeout(() => wx.navigateBack(), 1500);
        return;
      }

      // Ëé∑ÂèñÊ¥ªÂä®‰ø°ÊÅØ
      let activity = null;
      if (order.activityId) {
        try {
          const activityRes = await db.collection('activities')
            .doc(order.activityId)
            .get();
          activity = activityRes.data;
          console.log('‚úÖ Ê¥ªÂä®‰ø°ÊÅØ:', activity);
          console.log('üì∑ Ê¥ªÂä®ÂõæÁâáÂ≠óÊÆµ:', {
            image: activity.image,
            coverImage: activity.coverImage,
            images: activity.images
          });
          
          // Â∞ùËØïÂ§ö‰∏™ÂèØËÉΩÁöÑÂõæÁâáÂ≠óÊÆµ
          if (!activity.image && activity.coverImage) {
            activity.image = activity.coverImage;
            console.log('‰ΩøÁî® coverImage Â≠óÊÆµ');
          } else if (!activity.image && activity.images && activity.images.length > 0) {
            activity.image = activity.images[0];
            console.log('‰ΩøÁî® images[0] Â≠óÊÆµ');
          }
          
          if (activity.image) {
            console.log('‚úÖ ÊúÄÁªà‰ΩøÁî®ÁöÑÂõæÁâáURL:', activity.image);
          } else {
            console.warn('‚ö†Ô∏è Ê¥ªÂä®Ê≤°ÊúâÂõæÁâá');
          }
        } catch (e) {
          console.error('Ëé∑ÂèñÊ¥ªÂä®‰ø°ÊÅØÂ§±Ë¥•:', e);
        }
      }

      // Ëé∑ÂèñÊëÑÂΩ±Â∏à‰ø°ÊÅØ
      let photographer = null;
      if (order.photographerId) {
        const photographerRes = await db.collection('photographers')
          .doc(order.photographerId)
          .get();
        photographer = photographerRes.data;
      }

      // Ëé∑ÂèñÂ≠¶Áîü‰ø°ÊÅØ
      let student = null;
      if (order.studentId) {
        const studentRes = await db.collection('students')
          .where({ studentId: order.studentId })
          .get();
        if (studentRes.data && studentRes.data.length > 0) {
          student = studentRes.data[0];
        }
      }

      // Êü•ËØ¢ÂéÜÂè≤ÁÖßÁâáËÆ∞ÂΩïÔºà‰ªéorder_historyÈõÜÂêàÊàñËÄÖ‰ªéphotosÂ≠óÊÆµÂà§Êñ≠Ôºâ
      // Â¶ÇÊûúÂΩìÂâçÁä∂ÊÄÅÊòØpending_review‰ΩÜÊúâÂéÜÂè≤ÊãíÁªùËÆ∞ÂΩïÔºåËØ¥Êòé‰πãÂâç‰∏ä‰º†Ëøá
      let historyPhotos = [];
      
      // Â∞ùËØï‰ªéÊï∞ÊçÆÂ∫ìÊü•ËØ¢ËØ•ËÆ¢ÂçïÁöÑÂéÜÂè≤ËÆ∞ÂΩï
      try {
        console.log('üîç Êü•ËØ¢ÂéÜÂè≤ËÆ∞ÂΩïÔºåËÆ¢ÂçïID:', orderId);
        const historyRes = await db.collection('order_photo_history')
          .where({ orderId: orderId })
          .orderBy('createdAt', 'desc')
          .get();
        
        console.log('üìã ÂéÜÂè≤ËÆ∞ÂΩïÊü•ËØ¢ÁªìÊûú:', historyRes.data);
        
        if (historyRes.data && historyRes.data.length > 0) {
          historyPhotos = historyRes.data;
          console.log('‚úÖ ÊâæÂà∞ÂéÜÂè≤ËÆ∞ÂΩï', historyPhotos.length, 'Êù°');
        } else {
          console.log('‚ö†Ô∏è Ê≤°ÊúâÊâæÂà∞ÂéÜÂè≤ËÆ∞ÂΩï');
        }
      } catch (e) {
        console.error('‚ùå Êü•ËØ¢ÂéÜÂè≤ËÆ∞ÂΩïÂ§±Ë¥•:', e);
      }

      console.log('=== È°µÈù¢Êï∞ÊçÆËÆæÁΩÆ ===');
      console.log('ËÆ¢Âçï‰ø°ÊÅØ:', order);
      console.log('Ê¥ªÂä®‰ø°ÊÅØ:', activity);
      console.log('Ê¥ªÂä®ÂõæÁâáURL:', activity?.image);
      console.log('ÊëÑÂΩ±Â∏à‰ø°ÊÅØ:', photographer);
      console.log('Â≠¶Áîü‰ø°ÊÅØ:', student);
      console.log('ÂéÜÂè≤ËÆ∞ÂΩïÊï∞Èáè:', historyPhotos.length);

      this.setData({
        order,
        activity,
        photographer,
        student,
        historyPhotos,
        loading: false
      }, () => {
        console.log('‚úÖ setData ÂÆåÊàê');
        console.log('ÂΩìÂâç activity.image:', this.data.activity?.image);
      });
    } catch (e) {
      console.error('Âä†ËΩΩËÆ¢ÂçïËØ¶ÊÉÖÂ§±Ë¥•:', e);
      wx.showToast({ title: 'Âä†ËΩΩÂ§±Ë¥•', icon: 'none' });
      this.setData({ loading: false });
    }
  },

  // È¢ÑËßà‰ΩúÂìÅÂõæÁâá
  previewPhoto(e) {
    const { index } = e.currentTarget.dataset;
    wx.previewImage({
      urls: this.data.order.photos,
      current: this.data.order.photos[index]
    });
  },

  // ÂõæÁâáÂä†ËΩΩÈîôËØØ
  onImageError(e) {
    console.error('‚ùå Ê¥ªÂä®ÂõæÁâáÂä†ËΩΩÂ§±Ë¥•:', e);
    console.log('üì∑ ÂõæÁâáURL:', this.data.activity?.image);
  },

  // Êü•ÁúãÊ¥ªÂä®ËØ¶ÊÉÖ
  viewActivityDetail() {
    if (this.data.order && this.data.order.activityId) {
      wx.navigateTo({
        url: `/pages/activity/detail?id=${this.data.order.activityId}`
      });
    }
  },

  // È¢ÑËßàÊ¥ªÂä®Â∞ÅÈù¢
  previewActivityCover() {
    if (this.data.activity && this.data.activity.image) {
      wx.previewImage({
        urls: [this.data.activity.image],
        current: this.data.activity.image
      });
    }
  },

  // È¢ÑËßàÂéÜÂè≤ÁÖßÁâá
  previewHistoryPhoto(e) {
    const { photos, index } = e.currentTarget.dataset;
    wx.previewImage({
      urls: photos,
      current: photos[index]
    });
  },

  // ÂÆ°Ê†∏ÈÄöËøá
  async approveWork() {
    const res = await wx.showModal({
      title: 'ÂÆ°Ê†∏ÈÄöËøá',
      content: 'Á°ÆËÆ§‰ΩúÂìÅË¥®ÈáèÁ¨¶ÂêàË¶ÅÊ±ÇÔºüÈÄöËøáÂêéÂ∞ÜÂ±ïÁ§∫ÁªôÁî®Êà∑Á°ÆËÆ§„ÄÇ'
    });

    if (!res.confirm) return;

    try {
      wx.showLoading({ title: 'Â§ÑÁêÜ‰∏≠...' });

      const db = wx.cloud.database();
      await db.collection('activity_orders').doc(this.data.orderId).update({
        data: {
          status: 'pending_confirm',
          reviewedAt: new Date().toISOString(),
          updatedAt: new Date().toISOString()
        }
      });

      wx.hideLoading();
      wx.showToast({
        title: 'ÂÆ°Ê†∏ÈÄöËøá',
        icon: 'success',
        duration: 2000
      });

      setTimeout(() => {
        wx.navigateBack();
      }, 2000);
    } catch (e) {
      console.error('Êìç‰ΩúÂ§±Ë¥•:', e);
      wx.hideLoading();
      wx.showToast({
        title: 'Êìç‰ΩúÂ§±Ë¥•',
        icon: 'error'
      });
    }
  },

  // ÂÆ°Ê†∏ÊãíÁªù
  async rejectWork() {
    const that = this;
    
    // ‰ΩøÁî®Ëá™ÂÆö‰πâÂºπÁ™óÊàñËÄÖÁ≥ªÁªüÂºπÁ™ó
    const res = await wx.showModal({
      title: 'ÂÆ°Ê†∏ÊãíÁªù',
      content: '', // ÁïôÁ©∫Ôºå‰∏çÂ°´ÂÖÖÈªòËÆ§ÊñáÂ≠ó
      editable: true,
      placeholderText: '‰æãÂ¶ÇÔºöÂÖâÁ∫ø‰∏çË∂≥„ÄÅÊûÑÂõæ‰∏ç‰Ω≥„ÄÅÁîªÈù¢Ê®°Á≥äÁ≠â'
    });

    if (!res.confirm) return;

    const rejectReason = (res.content || '').trim();
    
    // È™åËØÅÊãíÁªùÂéüÂõ†
    if (!rejectReason) {
      wx.showToast({
        title: 'ËØ∑ËæìÂÖ•ÊãíÁªùÂéüÂõ†',
        icon: 'none'
      });
      // ÈáçÊñ∞Ë∞ÉÁî®
      setTimeout(() => {
        that.rejectWork();
      }, 1500);
      return;
    }
    
    if (rejectReason.length < 5) {
      wx.showToast({
        title: 'ÊãíÁªùÂéüÂõ†Ëá≥Â∞ë5‰∏™Â≠ó',
        icon: 'none'
      });
      setTimeout(() => {
        that.rejectWork();
      }, 1500);
      return;
    }

    try {
      wx.showLoading({ title: 'Â§ÑÁêÜ‰∏≠...' });

      const db = wx.cloud.database();
      const now = new Date().toISOString();

      // ‰øùÂ≠òÂéÜÂè≤ËÆ∞ÂΩïÔºàÂåÖÂê´Êèê‰∫§Êó∂Èó¥ÂíåÊãíÁªùÊó∂Èó¥Ôºâ
      try {
        await db.collection('order_photo_history').add({
          data: {
            orderId: this.data.orderId,
            photos: this.data.order.photos || [],
            rejectType: 'admin',
            rejectReason: rejectReason,
            submittedAt: this.data.order.submittedAt || now, // Êèê‰∫§Êó∂Èó¥
            rejectedAt: now, // ÊãíÁªùÊó∂Èó¥
            createdAt: now
          }
        });
        console.log('‚úÖ ÂéÜÂè≤ËÆ∞ÂΩïÂ∑≤‰øùÂ≠ò');
      } catch (historyErr) {
        console.warn('‚ö†Ô∏è ‰øùÂ≠òÂéÜÂè≤ËÆ∞ÂΩïÂ§±Ë¥•ÔºàÈõÜÂêàÂèØËÉΩ‰∏çÂ≠òÂú®Ôºâ:', historyErr.message);
        // ‰∏çÂΩ±Âìç‰∏ªÊµÅÁ®ãÁªßÁª≠ÊâßË°å
      }

      // Êõ¥Êñ∞ËÆ¢ÂçïÁä∂ÊÄÅ
      await db.collection('activity_orders').doc(this.data.orderId).update({
        data: {
          status: 'in_progress',
          adminRejectReason: rejectReason,
          adminRejectedAt: now,
          updatedAt: now
        }
      });

      wx.hideLoading();
      wx.showToast({
        title: 'Â∑≤ÊãíÁªùÔºåÈÄöÁü•ÊëÑÂΩ±Â∏àÈáçÊãç',
        icon: 'success',
        duration: 2000
      });

      setTimeout(() => {
        wx.navigateBack();
      }, 2000);
    } catch (e) {
      console.error('Êìç‰ΩúÂ§±Ë¥•:', e);
      wx.hideLoading();
      wx.showToast({
        title: 'Êìç‰ΩúÂ§±Ë¥•',
        icon: 'error'
      });
    }
  }
});

