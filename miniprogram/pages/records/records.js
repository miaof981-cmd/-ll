// pages/records/records.js
const cloudDB = require('../../utils/cloud-db.js');

Page({
  data: {
    userInfo: null,
    records: {
      reportCards: [],
      punishments: [],
      images: []
    },
    activeTab: 'grades', // grades, punishments, images
    loading: true,
    isAdmin: false,       // ÊòØÂê¶ÁÆ°ÁêÜÂëò
    studentId: '',        // Â≠¶ÁîüÂ≠¶Âè∑
    archiveExpanded: false, // Â≠¶Á±çÊ°£Ê°àÊòØÂê¶Â±ïÂºÄ
    isEditMode: false,    // ÊòØÂê¶ÁºñËæëÊ®°ÂºèÔºàÁÆ°ÁêÜÂëò‰∏ìÂ±ûÔºâ
    
    // Êñ∞Â¢û/ÁºñËæëÊ°£Ê°àÂºπÁ™ó
    showAddDialog: false,
    addRecordType: 'grade',
    newRecord: {},
    editingRecordId: null // Ê≠£Âú®ÁºñËæëÁöÑÊ°£Ê°àIDÔºånullË°®Á§∫Êñ∞Â¢û
  },

  onLoad(options) {
    // Ê£ÄÊü•ÊòØÂê¶ÁÆ°ÁêÜÂëò
    const app = getApp();
    const isAdmin = app.globalData.isAdmin || false;
    
    console.log('üìã Ê°£Ê°àÈ°µÈù¢Âä†ËΩΩ');
    console.log('   app.globalData.isAdmin:', app.globalData.isAdmin);
    console.log('   isAdmin:', isAdmin);
    console.log('   options:', options);
    
    this.setData({ isAdmin });
    
    // ÊîØÊåÅ‰ªéURLÂèÇÊï∞‰º†ÂÖ•studentIdÔºàÁÆ°ÁêÜÂëòÊü•ÁúãÊ°£Ê°àÔºâ
    if (options.studentId) {
      this.setData({ studentId: options.studentId });
      this.loadStudentRecords(options.studentId);
    } else {
      this.checkLogin();
    }
  },

  onShow() {
    // ‰∏çËá™Âä®Âà∑Êñ∞ÔºåÈÅøÂÖçË¶ÜÁõñÁÆ°ÁêÜÂëòÊü•ÁúãÁöÑÊ°£Ê°à
  },

  // Ê£ÄÊü•ÁôªÂΩïÁä∂ÊÄÅ
  checkLogin() {
    // ‰ªéÊåÅ‰πÖÂåñÂ≠òÂÇ®ËØªÂèñÁôªÂΩïÁä∂ÊÄÅ
    let userInfo = null;
    try {
      userInfo = wx.getStorageSync('userInfo');
    } catch (e) {
      console.error('ËØªÂèñÁôªÂΩïÁä∂ÊÄÅÂ§±Ë¥•:', e);
    }

    if (!userInfo) {
      wx.showModal({
        title: 'ÊèêÁ§∫',
        content: 'ËØ∑ÂÖàÁôªÂΩï',
        showCancel: false,
        success: () => {
          wx.switchTab({
            url: '/pages/my/my'
          });
        }
      });
      return;
    }

    const app = getApp();
    app.globalData.userInfo = userInfo;

    this.setData({ userInfo });
    this.loadStudentRecords(userInfo.studentId);
  },

  // Âä†ËΩΩÊåáÂÆöÂ≠¶ÁîüÁöÑÊ°£Ê°à
  async loadStudentRecords(studentId) {
    console.log('üì° Âä†ËΩΩÂ≠¶ÁîüÊ°£Ê°à:', studentId);
    wx.showLoading({ title: 'Âä†ËΩΩ‰∏≠...' });

    try {
      const student = await cloudDB.getStudentById(studentId);
      
      if (!student) {
        wx.hideLoading();
        wx.showToast({
          title: 'Â≠¶Áîü‰∏çÂ≠òÂú®',
          icon: 'error'
        });
        return;
      }

      // Ëé∑ÂèñÊ°£Ê°àËÆ∞ÂΩï
      const allRecords = await cloudDB.getRecords(studentId);
      console.log('‚úÖ Ê°£Ê°àËÆ∞ÂΩïÊï∞Èáè:', allRecords.length);
      
      // ÂàÜÁ±ªÊ°£Ê°à
      const records = {
        reportCards: allRecords.filter(r => r.type === 'grade'),
        punishments: allRecords.filter(r => r.type === 'punishment'),
        images: allRecords.filter(r => r.type === 'image')
      };

      // ËÆ°ÁÆóÊòæÁ§∫ÁöÑÁÖßÁâá
      const photoData = this.calculateDisplayPhotos(student);
      
      console.log('üîß ËÆæÁΩÆÊ°£Ê°àÊï∞ÊçÆ, isAdmin‰øùÊåÅ‰∏∫:', this.data.isAdmin);
      
      this.setData({
        userInfo: {
          studentId: student.studentId,
          name: student.name
        },
        student: student, // ÂÆåÊï¥ÁöÑÂ≠¶Áîü‰ø°ÊÅØÔºàÂåÖÂê´ËØÅ‰ª∂ÁÖß„ÄÅÊÄßÂà´„ÄÅÂπ¥ÈæÑ„ÄÅÁè≠Á∫ßÁ≠âÔºâ
        studentId: student.studentId,
        records,
        loading: false,
        // isAdmin: this.data.isAdmin, // ‰øùÊåÅÂéüÊúâÁöÑÁÆ°ÁêÜÂëòÁä∂ÊÄÅÔºå‰∏çË¶ÅË¶ÜÁõñ
        ...photoData // Â±ïÂºÄÁÖßÁâáÊòæÁ§∫Êï∞ÊçÆ
      });
      
      console.log('‚úÖ Ê°£Ê°àÊï∞ÊçÆÂ∑≤ËÆæÁΩÆ, ÂΩìÂâç isAdmin:', this.data.isAdmin);

      wx.hideLoading();
    } catch (e) {
      console.error('‚ùå Âä†ËΩΩÊ°£Ê°àÂ§±Ë¥•:', e);
      wx.hideLoading();
      wx.showToast({
        title: 'Âä†ËΩΩÂ§±Ë¥•',
        icon: 'error'
      });
    }
  },

  // ÂàáÊç¢Â≠¶Á±çÊ°£Ê°àÂ±ïÂºÄ/Êî∂Ëµ∑
  toggleArchive() {
    this.setData({
      archiveExpanded: !this.data.archiveExpanded
    });
  },

  // ËÆ°ÁÆóÊòæÁ§∫ÁöÑÁÖßÁâáÔºàËØÅ‰ª∂ÁÖßÂú®Á¨¨‰∏Ä‰∏™ÔºåÂè™ÊòæÁ§∫Ââç3Âº†Ôºâ
  calculateDisplayPhotos(student) {
    if (!student) {
      return {
        displayPhotos: [],
        displayPhotoCount: 0,
        hasMorePhotos: false,
        morePhotoCount: 0
      };
    }

    // ËØÅ‰ª∂ÁÖßÔºö‰ºòÂÖà‰ΩøÁî® avatarÔºåÂÖ∂Ê¨° certificatePhoto
    const certificatePhoto = student.avatar || student.certificatePhoto || null;
    
    // ÁîüÊ¥ªÁÖßÔºöËøáÊª§ÊéâËØÅ‰ª∂ÁÖß
    const lifePhotos = (student.lifePhotos || []).filter(p => p !== certificatePhoto && p !== student.avatar);
    
    // ÊÄªÊï∞ÔºöËØÅ‰ª∂ÁÖß + ÁîüÊ¥ªÁÖß
    const totalCount = (certificatePhoto ? 1 : 0) + lifePhotos.length;

    // ËØÅ‰ª∂ÁÖßÂç†1‰∏™‰ΩçÁΩÆÔºåÂâ©‰Ωô2‰∏™‰ΩçÁΩÆÁªôÁîüÊ¥ªÁÖß
    const maxDisplay = 2;
    const displayPhotos = lifePhotos.slice(0, maxDisplay);
    const hasMorePhotos = lifePhotos.length > maxDisplay;
    const morePhotoCount = lifePhotos.length - maxDisplay;

    return {
      displayPhotos,
      displayPhotoCount: totalCount,
      hasMorePhotos,
      morePhotoCount
    };
  },

  // ÁºñËæëÁîüÊ¥ªÁÖß
  editLifePhotos(e) {
    console.log('üéØ ÁÇπÂáªÁºñËæëÁîüÊ¥ªÁÖßÊåâÈíÆ');
    console.log('   studentId:', this.data.studentId);
    
    if (!this.data.studentId) {
      console.error('‚ùå studentId ‰∏∫Á©∫ÔºåÊó†Ê≥ïË∑≥ËΩ¨');
      wx.showToast({
        title: 'studentId ‰∏∫Á©∫',
        icon: 'error'
      });
      return;
    }
    
    console.log('‚úÖ Ë∑≥ËΩ¨Âà∞ÁºñËæëÈ°µÈù¢');
    wx.navigateTo({
      url: `/pages/my/edit-photos?studentId=${this.data.studentId}`,
      success: () => {
        console.log('‚úÖ Ë∑≥ËΩ¨ÊàêÂäü');
      },
      fail: (err) => {
        console.error('‚ùå Ë∑≥ËΩ¨Â§±Ë¥•:', err);
        wx.showToast({
          title: 'Ë∑≥ËΩ¨Â§±Ë¥•',
          icon: 'error'
        });
      }
    });
  },

  // È¢ÑËßàÁîüÊ¥ªÁÖß
  previewLifePhoto(e) {
    const index = e.currentTarget.dataset.index;
    const student = this.data.student;
    
    if (!student) return;
    
    // ËØÅ‰ª∂ÁÖßÔºö‰ºòÂÖà‰ΩøÁî® avatar
    const certificatePhoto = student.avatar || student.certificatePhoto;
    
    // ÊûÑÂª∫È¢ÑËßàÊï∞ÁªÑÔºöËØÅ‰ª∂ÁÖßÂú®Á¨¨‰∏Ä‰∏™ÔºåÂêéÈù¢ÊòØÁîüÊ¥ªÁÖß
    const previewUrls = [];
    if (certificatePhoto) {
      previewUrls.push(certificatePhoto);
    }
    
    // ÁîüÊ¥ªÁÖßÔºöËøáÊª§ÊéâËØÅ‰ª∂ÁÖß
    const lifePhotos = (student.lifePhotos || []).filter(p => p !== certificatePhoto && p !== student.avatar);
    previewUrls.push(...lifePhotos);
    
    if (previewUrls.length > 0) {
      wx.previewImage({
        urls: previewUrls,
        current: previewUrls[index] || previewUrls[0]
      });
    }
  },


  // ÁºñËæëÂ≠¶ÁîüÂü∫Êú¨‰ø°ÊÅØ
  editStudentBasicInfo() {
    wx.navigateTo({
      url: `/pages/admin/students/edit?studentId=${this.data.studentId}`
    });
  },

  // ÁºñËæëÊ°£Ê°àËÆ∞ÂΩï
  editRecord(e) {
    const { id, type, item } = e.currentTarget.dataset;
    console.log('ÁºñËæëÊ°£Ê°à:', type, id, item);
    
    // ËÆæÁΩÆÂΩìÂâçÁºñËæëÁöÑÊ°£Ê°à
    this.setData({
      showAddDialog: true,
      addRecordType: type,
      newRecord: item,
      editingRecordId: id
    });
  },

  // Âà†Èô§Â≠¶Áîü
  deleteStudent() {
    wx.showModal({
      title: 'Á°ÆËÆ§Âà†Èô§',
      content: `Á°ÆÂÆöË¶ÅÂà†Èô§Â≠¶Áîü„Äå${this.data.student.name}„ÄçÂêóÔºü\nËøôÂ∞ÜÂêåÊó∂Âà†Èô§ËØ•Â≠¶ÁîüÁöÑÊâÄÊúâÊ°£Ê°àËÆ∞ÂΩï„ÄÇ`,
      confirmColor: '#ef4444',
      success: async (res) => {
        if (res.confirm) {
          wx.showLoading({ title: 'Âà†Èô§‰∏≠...' });
          try {
            const db = wx.cloud.database();
            
            // 1. Âà†Èô§Â≠¶ÁîüËÆ∞ÂΩï
            await db.collection('students')
              .where({ studentId: this.data.studentId })
              .remove();

            // 2. Âà†Èô§Â≠¶ÁîüÊ°£Ê°àËÆ∞ÂΩï
            await db.collection('student_records')
              .where({ studentId: this.data.studentId })
              .remove();

            console.log('‚úÖ Â≠¶ÁîüÂà†Èô§ÊàêÂäü:', this.data.studentId);
            
            wx.hideLoading();
            wx.showToast({
              title: 'Âà†Èô§ÊàêÂäü',
              icon: 'success'
            });

            // Âª∂ËøüËøîÂõû
            setTimeout(() => {
              wx.navigateBack();
            }, 1500);
          } catch (e) {
            console.error('‚ùå Âà†Èô§Â≠¶ÁîüÂ§±Ë¥•:', e);
            wx.hideLoading();
            wx.showToast({
              title: 'Âà†Èô§Â§±Ë¥•',
              icon: 'error'
            });
          }
        }
      }
    });
  },

  // ÊòæÁ§∫Ê∑ªÂä†Ê°£Ê°àÂºπÁ™ó
  showAddRecordDialog() {
    wx.showActionSheet({
      itemList: ['Ê∑ªÂä†ÊàêÁª©', 'Ê∑ªÂä†Â§ÑÂàÜ', 'Ê∑ªÂä†ÂõæÁâáÊ°£Ê°à'],
      success: (res) => {
        const types = ['grade', 'punishment', 'image'];
        this.setData({
          showAddDialog: true,
          addRecordType: types[res.tapIndex],
          newRecord: {}
        });
      }
    });
  },

  // ÂÖ≥Èó≠Ê∑ªÂä†ÂºπÁ™ó
  closeAddDialog() {
    this.setData({
      showAddDialog: false,
      newRecord: {}
    });
  },

  // ËæìÂÖ•Êñ∞Ê°£Ê°àÊï∞ÊçÆ
  onRecordInput(e) {
    const { field } = e.currentTarget.dataset;
    const value = e.detail.value;
    this.setData({
      [`newRecord.${field}`]: value
    });
  },

  // ‰∏ä‰º†Ê°£Ê°àÂõæÁâá
  uploadRecordImage() {
    wx.chooseMedia({
      count: 1,
      mediaType: ['image'],
      sourceType: ['album', 'camera'],
      success: async (res) => {
        const tempFilePath = res.tempFiles[0].tempFilePath;
        wx.showLoading({ title: '‰∏ä‰º†‰∏≠...' });

        try {
          const timestamp = Date.now();
          const cloudPath = `records/${timestamp}_${Math.random().toString(36).slice(2)}.jpg`;
          
          const uploadResult = await wx.cloud.uploadFile({
            cloudPath: cloudPath,
            filePath: tempFilePath
          });

          this.setData({
            'newRecord.imageUrl': uploadResult.fileID
          });

          wx.hideLoading();
          wx.showToast({
            title: '‰∏ä‰º†ÊàêÂäü',
            icon: 'success'
          });
        } catch (e) {
          console.error('‚ùå ‰∏ä‰º†Â§±Ë¥•:', e);
          wx.hideLoading();
          wx.showToast({
            title: '‰∏ä‰º†Â§±Ë¥•',
            icon: 'error'
          });
        }
      }
    });
  },

  // ‰øùÂ≠òÊñ∞Ê°£Ê°à
  async saveNewRecord() {
    const { addRecordType, newRecord, studentId } = this.data;

    // È™åËØÅÂøÖÂ°´Â≠óÊÆµ
    if (addRecordType === 'grade' && (!newRecord.term || !newRecord.chinese)) {
      wx.showToast({
        title: 'ËØ∑Â°´ÂÜôÂÆåÊï¥‰ø°ÊÅØ',
        icon: 'none'
      });
      return;
    }

    if (addRecordType === 'punishment' && !newRecord.reason) {
      wx.showToast({
        title: 'ËØ∑Â°´ÂÜôÂ§ÑÂàÜÂéüÂõ†',
        icon: 'none'
      });
      return;
    }

    if (addRecordType === 'image' && (!newRecord.title || !newRecord.imageUrl)) {
      wx.showToast({
        title: 'ËØ∑Â°´ÂÜôÊ†áÈ¢òÂπ∂‰∏ä‰º†ÂõæÁâá',
        icon: 'none'
      });
      return;
    }

    wx.showLoading({ title: '‰øùÂ≠ò‰∏≠...' });

    try {
      const recordData = {
        type: addRecordType,
        ...newRecord
      };

      // Ë°•ÂÖÖÂ≠óÊÆµ
      if (addRecordType === 'grade') {
        recordData.chinese = parseFloat(newRecord.chinese) || 0;
        recordData.math = parseFloat(newRecord.math) || 0;
        recordData.english = parseFloat(newRecord.english) || 0;
        
        // ËÆ°ÁÆóÂπ≥ÂùáÂàÜ
        const total = recordData.chinese + recordData.math + recordData.english;
        const count = [recordData.chinese, recordData.math, recordData.english].filter(s => s > 0).length;
        recordData.average = count > 0 ? (total / count).toFixed(1) : '-';
      }

      await cloudDB.addRecord(studentId, recordData);

      wx.hideLoading();
      wx.showToast({
        title: 'Ê∑ªÂä†ÊàêÂäü',
        icon: 'success'
      });

      this.closeAddDialog();
      this.loadStudentRecords(studentId);
    } catch (e) {
      console.error('‚ùå Ê∑ªÂä†Ê°£Ê°àÂ§±Ë¥•:', e);
      wx.hideLoading();
      wx.showToast({
        title: 'Ê∑ªÂä†Â§±Ë¥•',
        icon: 'error'
      });
    }
  },

  // Âà†Èô§Ê°£Ê°àËÆ∞ÂΩï
  deleteRecord(e) {
    const { id, type } = e.currentTarget.dataset;
    
    wx.showModal({
      title: 'Á°ÆËÆ§Âà†Èô§',
      content: 'Á°ÆÂÆöË¶ÅÂà†Èô§ËøôÊù°Ê°£Ê°àËÆ∞ÂΩïÂêóÔºü',
      success: async (res) => {
        if (res.confirm) {
          wx.showLoading({ title: 'Âà†Èô§‰∏≠...' });

          try {
            // Ë∞ÉÁî®‰∫ëÊï∞ÊçÆÂ∫ìÂà†Èô§
            const db = wx.cloud.database();
            await db.collection(`records:${this.data.studentId}`)
              .doc(id)
              .remove();

            wx.hideLoading();
            wx.showToast({
              title: 'Âà†Èô§ÊàêÂäü',
              icon: 'success'
            });

            this.loadStudentRecords(this.data.studentId);
          } catch (e) {
            console.error('‚ùå Âà†Èô§Â§±Ë¥•:', e);
            wx.hideLoading();
            wx.showToast({
              title: 'Âà†Èô§Â§±Ë¥•',
              icon: 'error'
            });
          }
        }
      }
    });
  },

  // ÂàáÊç¢Ê†áÁ≠æÈ°µ
  switchTab(e) {
    const tab = e.currentTarget.dataset.tab;
    this.setData({
      activeTab: tab
    });
  },

  // Êü•ÁúãÂõæÁâá
  previewImage(e) {
    const url = e.currentTarget.dataset.url;
    const urls = this.data.records.images.map(img => img.url);
    wx.previewImage({
      current: url,
      urls: urls
    });
  },

  // ÈÄÄÂá∫ÁôªÂΩï
  logout() {
    wx.showModal({
      title: 'Á°ÆËÆ§ÈÄÄÂá∫',
      content: 'Á°ÆÂÆöË¶ÅÈÄÄÂá∫ÁôªÂΩïÂêóÔºü',
      success: (res) => {
        if (res.confirm) {
          const app = getApp();
          app.globalData.userInfo = null;
          app.globalData.isAdmin = false;
          
          wx.showToast({
            title: 'Â∑≤ÈÄÄÂá∫ÁôªÂΩï',
            icon: 'success'
          });

          setTimeout(() => {
            wx.switchTab({
              url: '/pages/index/index'
            });
          }, 1500);
        }
      }
    });
  }
});
